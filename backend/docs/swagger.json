{
    "swagger": "2.0",
    "info": {
        "description": "REST API for monitoring Docker containers.",
        "title": "Docker Monitoring API",
        "contact": {
            "name": "Mikhail Gunin",
            "url": "https://github.com/k6zma",
            "email": "k6zma@yandex.ru"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/container_status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of containers with optional filtering by various parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Retrieve a list of containers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by IP",
                        "name": "ip",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Filter by minimum ping time",
                        "name": "ping_time_min",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Filter by maximum ping time",
                        "name": "ping_time_max",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation date (greater than or equal to), format: RFC3339",
                        "name": "created_at_gte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation date (less than or equal to), format: RFC3339",
                        "name": "created_at_lte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by last update date (greater than or equal to), format: RFC3339",
                        "name": "updated_at_gte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by last update date (less than or equal to), format: RFC3339",
                        "name": "updated_at_lte",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of returned records",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GetContainerStatusResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new container to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Create a new container",
                "parameters": [
                    {
                        "description": "Container data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateContainerStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.GetContainerStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/container_status/{ip}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a container from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Delete container by IP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Container IP address",
                        "name": "ip",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Partially updates a container by its IP address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Containers"
                ],
                "summary": "Update container by IP",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Container IP address",
                        "name": "ip",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateContainerStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateContainerStatusRequest": {
            "type": "object",
            "required": [
                "ip_address",
                "last_successful_ping",
                "ping_time"
            ],
            "properties": {
                "ip_address": {
                    "type": "string"
                },
                "last_successful_ping": {
                    "type": "string"
                },
                "ping_time": {
                    "type": "number",
                    "minimum": 1
                }
            }
        },
        "dto.GetContainerStatusResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip_address": {
                    "type": "string"
                },
                "last_successful_ping": {
                    "type": "string"
                },
                "ping_time": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateContainerStatusRequest": {
            "type": "object",
            "properties": {
                "last_successful_ping": {
                    "type": "string"
                },
                "ping_time": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-Api-Key",
            "in": "header"
        }
    }
}