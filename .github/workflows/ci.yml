name: ci

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  pull-requests: read

jobs:
  commitlint:
    name: Lint Commit Messages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wagoid/commitlint-github-action@v6
      
  go-backend-build:
    name: Backend Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Build
        run: |
          cd backend
          go mod tidy
          go build -v ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: golangci-lint run ./backend

      - name: Test
        run: |
          cd backend
          go mod tidy
          go test -v -race -coverpkg=./... ./...

  go-pinger-build:
    name: Pinger Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Build
        run: |
          cd pinger
          go mod tidy
          go build -v ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: golangci-lint run ./pinger

      - name: Test
        run: |
          cd pinger
          go mod tidy
          go test -v -race -coverpkg=./... ./...

  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Build Frontend
        run: |
          cd frontend
          npm run build